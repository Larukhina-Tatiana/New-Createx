.animate-on-scroll {
  opacity: 0;
  // transform: translateX(-50px);
  transform: translateY(50px);
  transition: opacity 0.8s ease-out, transform 0.8s ease-out;
  will-change: opacity, transform;


  &.in-view {
    opacity: 1;
    transform: translateY(0);
  }

  &.spin.in-view {
    animation: spin 6s linear infinite;
  }

  &.fadeInUp.in-view {
    animation: fadeInUp 0.8s ease forwards 0.12s;
  }

  &.pulse.in-view {
    animation: pulse 1.5s ease-out infinite;
  }

  // –ï—Å–ª–∏ —Ö–æ—á–µ—à—å, –º–æ–∂–µ—à—å –æ–±—ä–µ–¥–∏–Ω–∏—Ç—å:
  &.fadeInUp.pulse.in-view {
    animation:
      fadeInUp 0.2s ease-out forwards,
      pulse 1.5s ease-out infinite;
    animation-delay: 0s, 0.5s;
  }

  &.shake.in-view {
    animation: gift-nudge 1.2s ease-out;
  }

  &.shake.shake-loop {
    animation: shake 0.6s infinite ease-in-out;
  }

  // &.fadeScale.in-view {
  //   animation: fadeScale 0.5s ease-out forwards;
  // }

  &.heartbeat.in-view {
    -webkit-animation: heartbeat 1.5s ease-in-out infinite both;
    animation: heartbeat 1.5s ease-in-out infinite both;
  }

  // &.running-line-right.in-view {
  //   animation: running-line-right 30s linear 1s infinite;
  // }
}

@media (prefers-reduced-motion: reduce) {
  .heartbeat {
    animation: none !important;
  }
}

.running-line-right {
  animation: running-line-right 30s linear 1s infinite;

  @media screen and (max-width:768px) {
    animation: running-line-right 10s linear 1s infinite;
  }
}


// .running-line-left {
//   animation: running-line-left 30s linear 1s infinite;
// }

.fade-scale {
  animation-name: fadeScale;
  animation-fill-mode: both;
  animation-timing-function: ease-out;
  animation-duration: 1s;

  view-timeline-name: --fadeScale-block;
  animation-timeline: --fadeScale-block;
  animation-range: 20% 50%;
}

.fadeInUp {
  animation: fadeInUp 0.8s ease forwards 0.12s;
}

// –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤
@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateX(-50px);
  }

  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes fadeIn {
  from {
    scale: 0.5;

  }
}

@keyframes spin {
  from {
    transform: rotate(0deg);
  }

  to {
    transform: rotate(360deg);
  }
}


@keyframes pulse {
  0% {
    transform: scale(1);
  }

  50% {
    transform: scale(1.05);
  }

  100% {
    transform: scale(1);
  }
}

@keyframes shake {
  0% {
    transform: translate(0);
  }

  20% {
    transform: translate(-1.5px, 1.5px) rotate(-1.5deg);
  }

  40% {
    transform: translate(-1.5px, -1.5px) rotate(1.5deg);
  }

  60% {
    transform: translate(1.5px, 1.5px) rotate(0.5deg);
  }

  80% {
    transform: translate(1.5px, -1.5px) rotate(1deg);
  }

  100% {
    transform: translate(0);
  }
}

@keyframes fadeScale {
  0% {
    scale: 0.5;
    // opacity: 0;
  }

  // 40% {
  //   opacity: 0.4;
  // }

  100% {
    scale: 1;
    // opacity: 1;
  }
}

@keyframes to-right {
  0% {
    transform: translate3d(-10%, 0, 1px);
  }

  100% {
    transform: translateZ(1px);
  }
}

// @keyframes running-line-right {
//   0% {
//     transform: translateX(0);
//     transform-origin: left center;
//   }

//   100% {
//     transform: translateX(-50%);
//     transform-origin: right center;
//   }
// }

// @keyframes running-line-left {
//   0% {
//     transform: translateX(0);
//     transform-origin: right center;
//   }

//   100% {
//     transform: translateX(-100%);
//     transform-origin: left center;
//   }
// }

// @keyframes running-line-left {
//   0% {
//     transform: translateX(0);
//     transform-origin: right center;
//   }

//   100% {
//     transform: translateX(-50%);
//     transform-origin: right center;
//   }
// }
@keyframes ticker-left {
  0% {
    transform: translateX(0);
  }

  100% {
    transform: translateX(-33.333%);
  }
}


.running-line-left {
  animation: ticker-left 40s linear infinite;
}

.running-line-right {
  animation: ticker-right 40s linear infinite;
}


@keyframes ticker-right {
  from {
    transform: translateX(-33.333%);
    ;
  }

  to {
    transform: translateX(0);
  }
}

// @keyframes running-line-right {
//   0% {
//     transform: translateX(-50%);
//   }

//   100% {
//     transform: translateX(0);
//   }
// }

// .running-line-right {
//   animation: running-line-right 30s linear infinite;
//   // display: flex;
//   // width: 200%;
// }

@keyframes heartbeat {
  0% {
    -webkit-transform: scale(1);
    transform: scale(1);
    -webkit-transform-origin: center center;
    transform-origin: center center;
    -webkit-animation-timing-function: ease-out;
    animation-timing-function: ease-out;
  }

  10% {
    -webkit-transform: scale(.91);
    transform: scale(.91);
    -webkit-animation-timing-function: ease-in;
    animation-timing-function: ease-in;
  }

  17% {
    -webkit-transform: scale(.98);
    transform: scale(.98);
    -webkit-animation-timing-function: ease-out;
    animation-timing-function: ease-out;
  }

  33% {
    -webkit-transform: scale(.87);
    transform: scale(.87);
    -webkit-animation-timing-function: ease-in;
    animation-timing-function: ease-in;
  }

  45% {
    -webkit-transform: scale(1);
    transform: scale(1);
    -webkit-animation-timing-function: ease-out;
    animation-timing-function: ease-out;
  }

  // -webkit-animation: heartbeat 1.5s ease-in-out infinite both;
  // animation: heartbeat 1.5s ease-in-out infinite both;
}


// –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è —Å–¥–≤–∏–≥–æ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∞ –≤ position.html -> vacancies
@mixin appearance($direction: left, $distance: 50px, $duration: 0.6s, $delay: 0.2s) {
  opacity: 0;

  @if $direction ==left {
    transform: translateX(-$distance);
    animation-name: slideIn-left;
  }

  @else if $direction ==right {
    transform: translateX($distance);
    animation-name: slideIn-right;
  }

  @else if $direction ==top {
    transform: translateY(-$distance);
    animation-name: slideIn-top;
  }

  @else if $direction ==bottom {
    transform: translateY($distance);
    animation-name: slideIn-bottom;
  }

  animation-duration: $duration;
  animation-delay: $delay;
  animation-timing-function: ease-out;
  animation-fill-mode: forwards;
}

@keyframes slideIn-left {
  from {
    transform: translateX(-50px);
    opacity: 0;
  }

  to {
    transform: translateX(0);
    opacity: 1;
  }
}

@keyframes slideIn-right {
  from {
    transform: translateX(50px);
    opacity: 0;
  }

  to {
    transform: translateX(0);
    opacity: 1;
  }
}

@keyframes slideIn-top {
  from {
    transform: translateY(-50px);
    opacity: 0;
  }

  to {
    transform: translateY(0);
    opacity: 1;
  }
}

@keyframes slideIn-bottom {
  from {
    transform: translateY(50px);
    opacity: 0;
  }

  to {
    transform: translateY(0);
    opacity: 1;
  }
}

.appearance-left.visible {
  @include appearance(left);
}

.appearance-right.visible {
  @include appearance(right);
}

.appearance-top.visible {
  @include appearance(top);
}

.appearance-bottom.visible {
  @include appearance(bottom);
}

/*
< !-- –í—Å–µ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ -- > 
<div class="appearance-left" data-animate="sync" > 1</div >
<div class="appearance-right" data-animate="sync" > 2</div > 
< !-- –û–¥–∏–Ω –∑–∞ –¥—Ä—É–≥–∏–º -- > 
<div class="appearance-left" data-animate="chain" > 3</div > <div class="appearance-right" data-animate="chain" > 4</div >
< !-- –ó–∞–¥–µ—Ä–∂–∫–∞ –ø–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º—É –≤—Ä–µ–º–µ–Ω–∏ -- >
<div class="appearance-top" data-animate="delay" data-delay="1.2" > 5</div >
*/


// @keyframes running-begin {
//   0% {
//     transform: translateX(0);
//   }

//   100% {
//     transform: translateX(-33.33%);
//   }



//   // -webkit-animation: heartbeat 1.5s ease-in-out infinite both;
//   // animation: appLandingLogosCarousel-scroll 40s linear infinite;
// }


// üéØ –ú–∏–∫—Å–∏–Ω –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏ —Ä–∞—Å–∫—Ä—ã—Ç–∏—è —Ñ–æ–Ω–∞ –Ω–∞ page-hero
@mixin my-reveal-bg($duration: 1s,
  $timing: ease-out,
  $start-size: 0% 100%,
  $anim-name: my-revealBg,
  $end-size: null) {
  // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ–ª—É—á–∞–µ–º end-size –∏–∑ –∫–∞—Ä—Ç—ã, –µ—Å–ª–∏ –Ω–µ –∑–∞–¥–∞–Ω–æ –≤—Ä—É—á–Ω—É—é
  $resolved-end-size: if($end-size ==null and map-has-key($reveal-bg-sizes, str-replace($anim-name, "my-revealBg-", "")),
      map-get($reveal-bg-sizes, str-replace($anim-name, "my-revealBg-", "")),
      $end-size );

  background-size: $start-size;
  animation: $anim-name $duration $timing forwards;

  // fallback: –µ—Å–ª–∏ resolved-end-size –Ω–µ null, –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –µ–≥–æ –≥–¥–µ-—Ç–æ –µ—â—ë
}

@mixin generate-reveal-keyframe($anim-name,
  $end-size: 50% 100%) {
  @keyframes #{$anim-name} {
    to {
      background-size: $end-size;
    }
  }
}

// –ö–∞—Ä—Ç–∞ —Ä–∞–∑–º–µ—Ä–æ–≤ –∞–Ω–∏–º–∞—Ü–∏–∏
$reveal-bg-sizes: (
  "100-100": 100% 100%,
  "50-100": 50% 100%,
  "56-100": 56% 100%,
  "52-100": 52% 100%,
  "46-100": 46% 100%,
  "52-85": 52% 85%,
  "cover": cover
);

@each $name, $size in $reveal-bg-sizes {
  @include generate-reveal-keyframe(my-revealBg-#{$name}, $size);
}


/*

// // üì¶ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:


–°–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è Copilot
üìå –ó–∞—á–µ–º –Ω—É–∂–µ–Ω $anim-name –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è $anim-name –ø–æ–∑–≤–æ–ª—è–µ—Ç: ‚úÖ –ù–∞–∑–≤–∞—Ç—å @keyframes –∞–Ω–∏–º–∞—Ü–∏—é –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏;

‚úÖ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –æ–¥–Ω–æ –∏ —Ç–æ –∂–µ @mixin reveal-bg(...) —Å —Ä–∞–∑–Ω—ã–º–∏ –Ω–∞–∑–≤–∞–Ω–∏—è–º–∏;

‚úÖ –ò–∑–±–µ–∂–∞—Ç—å –∫–æ–Ω—Ñ–ª–∏–∫—Ç–∞,
–µ—Å–ª–∏ —Ç—ã –≤—ã–∑—ã–≤–∞–µ—à—å –º–∏–∫—Å–∏–Ω –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ä–∞–∑ —Å —Ä–∞–∑–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –Ω–∞ .page-hero –∏ .banner).
üß† –ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç –í–æ—Ç –∫–ª—é—á–µ–≤–æ–π –º–æ–º–µ–Ω—Ç:



–º–∏–∫—Å–∏–Ω –≤—Å—Ç–∞–≤–∏—Ç –∏–º—è –∏–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ ‚Äî –Ω–∞–ø—Ä–∏–º–µ—Ä,
revealBg,
bgExpandHero,
bgFadeSlide,
–∏ —Ç.–¥.
‚ú® –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è scss .page-hero {
  @include reveal-bg($duration: 1.2s,
    $start-size: 0% 100%,
    $end-size: 100% 100%,
    $anim-name: bgExpandHero);
}

–≠—Ç–æ —Å–æ–∑–¥–∞—Å—Ç: css @keyframes bgExpandHero {
  ...
}

–ò –ø—Ä–∏–º–µ–Ω–∏—Ç animation: bgExpandHero 1.2s ease-out forwards;
‚Äî –∫—Ä–∞—Å–∏–≤–æ –∏ –∏–∑–æ–ª–∏—Ä–æ–≤–∞–Ω–Ω–æ üíÖ
*/


@keyframes expandLeft {
  from {
    transform: scaleX(0);
    transform-origin: left;
  }

  to {
    transform: scaleX(1);
    transform-origin: left;
  }
}

@keyframes expandRight {
  from {
    transform: scaleX(0);
    transform-origin: right;
  }

  to {
    transform: scaleX(1);
    transform-origin: right;
  }
}

.img-expand-left {
  animation: expandLeft 1s cubic-bezier(0.4, 0, 0.6, 1) forwards;
}

.img-expand-right {
  animation: expandRight 1s cubic-bezier(0.4, 0, 0.6, 1) both;
}

@mixin expand-img($origin: left, $duration: 1s) {
  transform: scaleX(0);
  transform-origin: $origin;
  animation: expand#{$origin} $duration cubic-bezier(0.4, 0, 0.6, 1) forwards;
}


@keyframes clip-path {
  from {
    opacity: 0;
    clip-path: inset(45% 20% 45% 20%);
  }

  to {
    opacity: 1;
    clip-path: inset(0% 0% 0% 0%);
  }
}

.revealing-image {
  /* Create View Timeline */
  view-timeline-name: --revealing-image;
  view-timeline-axis: block;

  /* Attach animation, linked to the  View Timeline */
  animation: linear clip-path both;
  animation-timeline: --revealing-image;

  /* Tweak range when effect should run*/
  animation-range: entry 15% cover 50%;
}


@keyframes scaleUp {
  to {
    transform: scale(1);
    opacity: 1;
  }
}

@mixin appear-scale($duration: 0.8s, $easing: ease-out, $origin: center center, $scale: 0.5) {
  transform-origin: $origin;
  transform: scale($scale);
  opacity: 0;
  transition: transform $duration $easing, opacity $duration $easing;

  &.is-visible {
    transform: scale(1);
    opacity: 1;
  }
}

@mixin appear-scale3d($duration: 0.8s,
  $easing: ease-out,
  $origin: center center) {
  transform-origin: $origin;
  animation: scale3d $duration $easing forwards;
}

@keyframes scale3d {

  0% {
    transform: scale3d(0, 0, 0);
    opacity: 0;
  }

  100% {
    transform: scale3d(1, 1, 1);
    opacity: 1;
  }
}