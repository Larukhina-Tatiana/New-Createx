(function () {
  // üîß –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã
  const maxItems = 6; // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–∞—Ä—Ç–æ—á–µ–∫, –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º—ã—Ö –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –ø–æ–∫–∞–∑–µ
  let currentStep = 1; // –®–∞–≥ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ü–æ–∫–∞–∑–∞—Ç—å –±–æ–ª—å—à–µ"

  // üîó –≠–ª–µ–º–µ–Ω—Ç—ã –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
  const portfolioTabsNav = document.querySelector(".portfolio-tabs-nav");
  const portfolioTabsBtns = document.querySelectorAll(
    ".portfolio-tabs-nav__btn"
  );
  const loadMore = document.querySelector(".portfolio-more");

  /**
   * –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –∫–∞—Ä—Ç–æ—á–∫–∏ –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–π –≤–∫–ª–∞–¥–∫–∏.
   * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø–µ—Ä–≤—ã–µ maxItems, –æ—Å—Ç–∞–ª—å–Ω—ã–µ —Å–∫—Ä—ã–≤–∞–µ—Ç.
   * –£–ø—Ä–∞–≤–ª—è–µ—Ç –≤–∏–¥–∏–º–æ—Å—Ç—å—é –∫–Ω–æ–ø–∫–∏ "–ü–æ–∫–∞–∑–∞—Ç—å –±–æ–ª—å—à–µ".
   *
   * @param {string} path - –∑–Ω–∞—á–µ–Ω–∏–µ data-path –∞–∫—Ç–∏–≤–Ω–æ–π –≤–∫–ª–∞–¥–∫–∏
   */
  function renderTabItems(path) {
    const allItems = document.querySelectorAll(".tabs-content__item");

    const itemsToShow =
      path === "all"
        ? Array.from(allItems)
        : Array.from(document.querySelectorAll(`[data-target="${path}"]`))
            .map((el) => el.closest(".tabs-content__item"))
            .filter(Boolean);

    // –°–∫—Ä—ã–≤–∞–µ–º –≤—Å–µ –∫–∞—Ä—Ç–æ—á–∫–∏
    allItems.forEach((item) => {
      item.classList.remove("item--visible");
      item.classList.add("item--hidden");
      item.style.display = "none";
    });

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ maxItems
    itemsToShow.slice(0, maxItems).forEach((item) => {
      item.style.display = "block";
      requestAnimationFrame(() => {
        item.classList.remove("item--hidden");
        item.classList.add("item--visible");
      });
    });

    // –£–ø—Ä–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–æ–π "–ü–æ–∫–∞–∑–∞—Ç—å –±–æ–ª—å—à–µ"
    if (loadMore) {
      loadMore.style.display =
        itemsToShow.length > maxItems ? "inline-flex" : "none";
    }
  }

  /**
   * –ê–∫—Ç–∏–≤–∏—Ä—É–µ—Ç –≤–∫–ª–∞–¥–∫—É, –æ–±–Ω–æ–≤–ª—è–µ—Ç UI –∏ –∑–∞–ø—É—Å–∫–∞–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∫–∞—Ä—Ç–æ—á–µ–∫.
   * –ü—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –ø—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ—Ç –∫ –Ω–∞—á–∞–ª—É –∫–æ–Ω—Ç–µ–Ω—Ç–∞.
   *
   * @param {string} path - –∑–Ω–∞—á–µ–Ω–∏–µ data-path –≤–∫–ª–∞–¥–∫–∏
   * @param {boolean} scroll - –Ω—É–∂–Ω–æ –ª–∏ –ø—Ä–æ–∫—Ä—É—á–∏–≤–∞—Ç—å –∫ –∫–∞—Ä—Ç–æ—á–∫–∞–º
   */
  function activateTab(path, scroll = true) {
    console.log(`‚ñ∂Ô∏è –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –≤–∫–ª–∞–¥–∫—É: ${path}`);
    currentStep = 1;

    // –ü—Ä–æ–∫—Ä—É—Ç–∫–∞ –∫ –Ω–∞—á–∞–ª—É –∫–∞—Ä—Ç–æ—á–µ–∫
    if (scroll) {
      const cardsWrapper = document.querySelector(".tabs-content");
      const tabsWrapper = document.querySelector(".portfolio-tabs-nav");

      if (cardsWrapper) {
        const headerHeight =
          parseInt(
            getComputedStyle(document.documentElement).getPropertyValue(
              "--header-height"
            )
          ) || 0;

        const tabsHeight = tabsWrapper?.offsetHeight || 0;
        const totalOffset = headerHeight + tabsHeight;

        const top =
          cardsWrapper.getBoundingClientRect().top +
          window.scrollY -
          totalOffset;

        window.scrollTo({
          top,
          behavior: "smooth",
        });
      }
    }

    // –û–±–Ω–æ–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω—É—é –∫–Ω–æ–ø–∫—É
    const targetBtn = document.querySelector(
      `.portfolio-tabs-nav__btn[data-path="${path}"]`
    );
    if (!targetBtn) return;

    portfolioTabsBtns.forEach((btn) =>
      btn.classList.remove("portfolio-tabs-nav__btn--active")
    );
    targetBtn.classList.add("portfolio-tabs-nav__btn--active");

    // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –∫–∞—Ä—Ç–æ—á–∫–∏
    renderTabItems(path);
  }

  /**
   * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≤–∫–ª–∞–¥–∫–∏ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã.
   * –°—á–∏—Ç—ã–≤–∞–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ –∏–∑ URL: #hash, ?tab=..., sessionStorage.
   * –ü–æ–≤—Ç–æ—Ä—è–µ—Ç –ø–æ–ø—ã—Ç–∫–∏, –µ—Å–ª–∏ –∫–∞—Ä—Ç–æ—á–∫–∏ –µ—â—ë –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã.
   */
  function initTabFromURL() {
    let hash = window.location.hash.replace("#", "");
    // console.log("‚ñ∂Ô∏è initTabFromURL: hash =", hash);
    // console.log("window.location.search =", window.location.search);
    // console.log("window.location.hash =", window.location.hash);

    if (!hash) {
      hash = new URLSearchParams(window.location.search).get("tab");
    }
    if (!hash) {
      hash = sessionStorage.getItem("tab");
      sessionStorage.removeItem("tab");
    }

    if (!hash) {
      activateTab("all", false); // –ë–µ–∑ –ø—Ä–æ–∫—Ä—É—Ç–∫–∏ –ø—Ä–∏ –æ–±—ã—á–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–µ
      return;
    }

    let attempts = 0;
    const maxAttempts = 30;

    const check = () => {
      const btn = document.querySelector(
        `.portfolio-tabs-nav__btn[data-path="${hash}"]`
      );
      const items = document.querySelectorAll(`[data-target="${hash}"]`);
      if (btn && items.length > 0) {
        activateTab(hash, true); // –ü—Ä–æ–∫—Ä—É—Ç–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ—Ö–æ–¥–µ —Å –¥—Ä—É–≥–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
      } else if (attempts < maxAttempts) {
        attempts++;
        setTimeout(check, 100);
      } else {
        console.warn(`‚ùå –í–∫–ª–∞–¥–∫–∞ "${hash}" –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ ‚Äî –Ω–µ –∞–∫—Ç–∏–≤–∏—Ä—É–µ–º "all"`);
      }
    };

    check();
  }

  /**
   * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ü–æ–∫–∞–∑–∞—Ç—å –±–æ–ª—å—à–µ".
   * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ª–µ–¥—É—é—â—É—é –ø–æ—Ä—Ü–∏—é –∫–∞—Ä—Ç–æ—á–µ–∫ –ø–æ —Ç–µ–∫—É—â–µ–π –≤–∫–ª–∞–¥–∫–µ.
   */
  if (loadMore) {
    loadMore.addEventListener("click", () => {
      const activePath = document.querySelector(
        ".portfolio-tabs-nav__btn--active"
      )?.dataset.path;
      if (!activePath) return;

      const allItems =
        activePath === "all"
          ? Array.from(document.querySelectorAll(".tabs-content__item"))
          : Array.from(
              document.querySelectorAll(`[data-target="${activePath}"]`)
            )
              .map((el) => el.closest(".tabs-content__item"))
              .filter(Boolean);

      const start = currentStep * maxItems;
      const end = start + maxItems;
      const nextItems = allItems.slice(start, end);

      nextItems.forEach((item, index) => {
        item.style.display = "block";
        setTimeout(() => {
          item.classList.remove("item--hidden");
          item.classList.add("item--visible");
        }, index * 100);
      });

      currentStep++;

      if (end >= allItems.length) {
        loadMore.style.display = "none";
      }
    });
  }

  /**
   * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –ø–æ –≤–∫–ª–∞–¥–∫–∞–º.
   * –ê–∫—Ç–∏–≤–∏—Ä—É–µ—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é –≤–∫–ª–∞–¥–∫—É –∏ –æ–±–Ω–æ–≤–ª—è–µ—Ç URL.
   */
  if (portfolioTabsNav) {
    portfolioTabsNav.addEventListener("click", (e) => {
      const target = e.target.closest(".portfolio-tabs-nav__btn");
      if (target) {
        activateTab(target.dataset.path);
        history.pushState(null, "", `#${target.dataset.path}`);
      }
    });
  }

  // üîÅ –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–µ—Ä–µ—Ö–æ–¥–æ–≤ –Ω–∞–∑–∞–¥/–≤–ø–µ—Ä—ë–¥
  window.addEventListener("popstate", () => {
    console.log("üîÑ popstate: –ø—Ä–æ–≤–µ—Ä—è–µ–º —Ö–µ—à");
    initTabFromURL();
  });

  // üì§ –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –≥–ª–æ–±–∞–ª—å–Ω–æ
  window.initTabs = () => {}; // –µ—Å–ª–∏ –Ω—É–∂–Ω–æ, –º–æ–∂–Ω–æ –æ—Å—Ç–∞–≤–∏—Ç—å –ø—É—Å—Ç—ã–º
  window.initTabFromURL = initTabFromURL;
})();
