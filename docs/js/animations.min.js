const Animations={prefersReducedMotion:window.matchMedia("(prefers-reduced-motion: reduce)").matches,init(){document.addEventListener("DOMContentLoaded",(()=>{this.initShakeLoop(),this.initAppearance(),this.init3DTilt()}))},initShakeLoop(){const e=document.querySelectorAll(".animate-on-scroll"),t=e=>{if(this.prefersReducedMotion||"true"===e.dataset.shaking)return;e.dataset.shaking="true";const t=setInterval((()=>{e.classList.add("shake-loop"),setTimeout((()=>e.classList.remove("shake-loop")),1200)}),3e3);e.dataset.shakeInterval=t},s=(e,s)=>{const n=e.classList.contains("shake");s?(e.classList.add("in-view"),n&&t(e)):(e.classList.remove("in-view"),n&&(e=>{const t=e.dataset.shakeInterval;t&&clearInterval(t),delete e.dataset.shakeInterval,delete e.dataset.shaking,e.classList.remove("shake-loop")})(e))};if("IntersectionObserver"in window){const t=new IntersectionObserver((e=>{e.forEach((e=>{s(e.target,e.isIntersecting)}))}),{threshold:.2});e.forEach((e=>t.observe(e)))}else{const t=()=>{e.forEach((e=>{const t=e.getBoundingClientRect(),n=t.top<=window.innerHeight&&t.bottom>=0;s(e,n)}))};window.addEventListener("scroll",t),window.addEventListener("resize",t),t()}},initAppearance(){let e=[...document.querySelectorAll("[class*='appearance-']")];const t=new IntersectionObserver((t=>{t.forEach((t=>{const s=t.target,n=s.dataset.animate,i=s.dataset.delay,a=e.indexOf(s);if(t.isIntersecting){let t=0;"sync"===n?t=0:"chain"===n?t=.2+.1*a:"delay"===n&&i&&(t=parseFloat(i)),s.style.animationDelay=`${t}s`,s.classList.add("visible"),"chain"===n&&s.addEventListener("animationend",(()=>{const t=e[a+1];t&&!t.classList.contains("visible")&&t.classList.add("visible")}),{once:!0})}else s.classList.remove("visible")}))}),{threshold:.2,rootMargin:"0px 0px -50px 0px"}),s=()=>{e.forEach((e=>t.observe(e)))};s(),window.addEventListener("resize",(()=>{e=[...document.querySelectorAll("[class*='appearance-']")],s()}))},init3DTilt(){const e=document.getElementById("js-container"),t=document.getElementById("js-inner");if(!e||!t)return;const s={_x:0,_y:0,x:0,y:0,updatePosition(e){this.x=e.clientX-this._x,this.y=-1*(e.clientY-this._y)},setOrigin(e){const t=e.getBoundingClientRect();this._x=t.left+t.width/2,this._y=t.top+t.height/2}};s.setOrigin(e);let n=0;const i=e=>{s.updatePosition(e);const n=(s.y/t.offsetHeight/2).toFixed(2),i=(s.x/t.offsetWidth/2).toFixed(2);t.style.transform=`rotateX(${n}deg) rotateY(${i}deg)`};e.addEventListener("mouseenter",i),e.addEventListener("mouseleave",(()=>t.style="")),e.addEventListener("mousemove",(e=>{n++%10==0&&i(e)}))}};Animations.init();