function updateHead(e){document.title=`${e.title} â€” Createx Construction`;const t=document.querySelector('meta[name="description"]');t&&t.setAttribute("content",e.description[0]);const r=document.querySelector('meta[property="og:title"]');r&&r.setAttribute("content",e.title);const n=document.querySelector('meta[property="og:description"]');n&&n.setAttribute("content",e.description[0]);const c=document.querySelector('meta[property="og:url"]');if(c){const e=window.location.href;c.setAttribute("content",e)}}function showError(e){document.querySelector(".project").innerHTML=`<p class="error-message">${e}</p>`}function renderProject(e){updateHead(e),document.querySelector(".project__title").textContent=e.title,renderGallery(e.gallery),renderThumbnails(e.thumbnails),renderDescription(e.description),renderDetailsTable(e.details)}function renderGallery(e){const t=document.querySelector(".project-slider-big .swiper-wrapper");t.innerHTML="";const r=new URLSearchParams(window.location.search).get("id");e.forEach((e=>{t.innerHTML+=`\n      <div class="swiper-slide">\n        <div class="project__cover-big">\n          <picture>\n            <source type="image/avif" srcset="\n              ../images/projects/${r}/${e.src}@1x.avif 1x,\n              ../images/projects/${r}/${e.src}@2x.avif 2x">\n            <source type="image/webp" srcset="\n              ../images/projects/${r}/${e.src}@1x.webp 1x,\n              ../images/projects/${r}/${e.src}@2x.webp 2x">\n            <img class="project__img"\n              src="../images/projects/${r}/${e.src}@1x.jpg"\n              loading="lazy" decoding="async" alt="${e.alt}">\n          </picture>\n        </div>\n      </div>`}))}function renderThumbnails(e){const t=document.querySelector("[data-thumbs-slider] .swiper-wrapper");t.innerHTML="";const r=new URLSearchParams(window.location.search).get("id");e.forEach((e=>{t.innerHTML+=`\n      <div class="swiper-slide">\n        <div class="project__cover-small">\n          <picture>\n            <source type="image/avif" srcset="\n              ../images/projects/${r}/${e.src}@1x.avif 1x,\n              ../images/projects/${r}/${e.src}@2x.avif 2x">\n            <source type="image/webp" srcset="\n              ../images/projects/${r}/${e.src}@1x.webp 1x,\n              ../images/projects/${r}/${e.src}@2x.webp 2x">\n            <img class="project__img project__img--small"\n              src="../images/projects/${r}/${e.src}@1x.jpg"\n              loading="lazy" decoding="async" alt="${e.alt}">\n          </picture>\n        </div>\n      </div>`}))}function renderDescription(e){const t=document.querySelector(".project-goal__content"),r=t.querySelector(".project-goal__subtitle");t.innerHTML="",t.appendChild(r),e.forEach((e=>{const r=document.createElement("p");r.className="project-goal__descr",r.innerHTML=e,t.appendChild(r)}))}function renderDetailsTable(e){const t=document.querySelector(".project-goal__table");t.innerHTML="";const r={location:"LOCATION",client:"CLIENT",architect:"ARCHITECT",size:"SIZE",value:"VALUE",completed:"COMPLETED"};for(const n in r)e[n]&&(t.innerHTML+=`\n        <tr>\n          <td class="project-goal__table-name">${r[n]}</td>\n          <td class="project-goal__table-value">${e[n]}</td>\n        </tr>`)}document.addEventListener("DOMContentLoaded",(async()=>{const e=new URLSearchParams(window.location.search).get("id");if(e)try{const t=await fetch(`data/projects/${e}.json`);if(!t.ok)throw new Error("Project data not found.");renderProject(await t.json())}catch(e){showError(`Error loading project: ${e.message}`)}else showError("Project ID not specified in URL.")}));